/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ADPVendorService.java
 *
 * Created on Jul 22, 2010, 3:49:33 AM
 */

package Hi5Soft.adp.Transaction;

import java.beans.XMLDecoder;
import java.beans.XMLEncoder;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author admin
 */
public class ADPVendorService extends javax.swing.JFrame {

    /** Creates new form ADPVendorService */
    
    
    public ADPVendorService() {
        initComponents();
        this.setLocation(100, 100);  
        try{
            //load the properties
            Properties config = Hi5Utils.GetConfigProperties();
            fullfillCriminalHistoryFileLocationTextBox.setText(
                    config.getProperty("fullfillCriminalHistoryFileLocation"));
            finishedFullfillCriminalHistoryFileLocationTextBox.setText(
                    config.getProperty("finishedFullfillCriminalHistoryFileLocation"));
            getWorkFileLocationTextBox.setText(
                    config.getProperty("getWorkFileLocation"));
            initialDelay = Integer.parseInt(config.getProperty("requestInitialDelay")) * 1000;
            delayIntervel = Integer.parseInt(config.getProperty("requestIntervel")) * 1000;
        }catch(Exception ex){
            ex.printStackTrace();
        }
        backgroundTimer = new Timer("SchedulerThread");
        backgroundTimer.schedule(new ScheduleTask(), initialDelay, delayIntervel);
    }

    class ScheduleTask extends TimerTask {
        public void run() {
            try {
                startProcessButton.setEnabled(false);
                uploadFullFillButton.setEnabled(false);
                fullfillCriminalHistoryFileLocationTextBox.setEnabled(false);
                finishedFullfillCriminalHistoryFileLocationTextBox.setEnabled(false);
                getWorkFileLocationTextBox.setEnabled(false);
                finishedFullfillFileLocationButton.setEnabled(false);
                fulillCriminalChooserButton.setEnabled(false);
                getWorkFfolderChooserButton.setEnabled(false);
                CheckFoldersAvailability();
                TransactionManager mgr = new TransactionManager();
                if (mgr.IsWebServiceAvailable()) {
                    System.out.println("Service Available");
                    Date dt = new Date();
                    SimpleDateFormat ft = new SimpleDateFormat("dd-MM-yyyy kk-mm-ss");
                    String csvFileName = ft.format(dt);
                    String xmlFileName = getWorkFileLocationTextBox.getText() + "\\XML\\" + csvFileName + ".xml";
                    csvFileName = getWorkFileLocationTextBox.getText() + "\\CSV\\" + csvFileName + ".csv";
                    mgr.GetWork(csvFileName, xmlFileName);
                    System.out.println("Work list saved to : " + csvFileName);
                    //mgr.FullFillCriminalHistory(fullfillCriminalHistoryFileLocationTextBox.getText(),
                    //    finishedFullfillCriminalHistoryFileLocationTextBox.getText());
                } else {
                    System.out.println("Service Not Available");
                }
            } catch(Exception ex){
                ex.printStackTrace();
            }
            finally{
                startProcessButton.setEnabled(true);
                uploadFullFillButton.setEnabled(true);
                fullfillCriminalHistoryFileLocationTextBox.setEnabled(true);
                finishedFullfillCriminalHistoryFileLocationTextBox.setEnabled(true);
                getWorkFileLocationTextBox.setEnabled(true);

                finishedFullfillFileLocationButton.setEnabled(true);
                fulillCriminalChooserButton.setEnabled(true);
                getWorkFfolderChooserButton.setEnabled(true);
            }
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        getWorkFileLocationTextBox = new javax.swing.JTextField();
        fullfillCriminalHistoryFileLocationTextBox = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        startProcessButton = new javax.swing.JButton();
        getWorkFfolderChooserButton = new javax.swing.JButton();
        fulillCriminalChooserButton = new javax.swing.JButton();
        uploadFullFillButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        finishedFullfillCriminalHistoryFileLocationTextBox = new javax.swing.JTextField();
        finishedFullfillFileLocationButton = new javax.swing.JButton();

        jLabel3.setText("Process finished successfully");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jLabel3)
                .addContainerGap(81, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel3)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Zaeplex ADP Interface");
        setFont(new java.awt.Font("Verdana", 0, 10));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 10));
        jLabel1.setText("GetWork File Location :");

        getWorkFileLocationTextBox.setEditable(false);
        getWorkFileLocationTextBox.setFont(new java.awt.Font("Verdana", 0, 10)); // NOI18N
        getWorkFileLocationTextBox.setText("c:\\Zaeplex\\WorkList");

        fullfillCriminalHistoryFileLocationTextBox.setEditable(false);
        fullfillCriminalHistoryFileLocationTextBox.setFont(new java.awt.Font("Verdana", 0, 10)); // NOI18N
        fullfillCriminalHistoryFileLocationTextBox.setText("c:\\Zaeplex\\ADPResponce");

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 10));
        jLabel2.setText("Fullfill File Location :");

        startProcessButton.setText("Getwork");
        startProcessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startProcessButtonActionPerformed(evt);
            }
        });

        getWorkFfolderChooserButton.setText("...");
        getWorkFfolderChooserButton.setFocusable(false);
        getWorkFfolderChooserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getWorkFfolderChooserButtonActionPerformed(evt);
            }
        });

        fulillCriminalChooserButton.setText("...");
        fulillCriminalChooserButton.setFocusable(false);
        fulillCriminalChooserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fulillCriminalChooserButtonActionPerformed(evt);
            }
        });

        uploadFullFillButton.setText("Upload Fullfill");
        uploadFullFillButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadFullFillButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 10));
        jLabel4.setText("Finished File Location :");

        finishedFullfillCriminalHistoryFileLocationTextBox.setEditable(false);
        finishedFullfillCriminalHistoryFileLocationTextBox.setFont(new java.awt.Font("Verdana", 0, 10)); // NOI18N
        finishedFullfillCriminalHistoryFileLocationTextBox.setText("c:\\Zaeplex\\ADPResponceFinished");

        finishedFullfillFileLocationButton.setText("...");
        finishedFullfillFileLocationButton.setFocusable(false);
        finishedFullfillFileLocationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishedFullfillFileLocationButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getWorkFileLocationTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fullfillCriminalHistoryFileLocationTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fulillCriminalChooserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(getWorkFfolderChooserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(finishedFullfillCriminalHistoryFileLocationTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(finishedFullfillFileLocationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(startProcessButton)
                .addGap(28, 28, 28)
                .addComponent(uploadFullFillButton)
                .addContainerGap(121, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(getWorkFileLocationTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(getWorkFfolderChooserButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(fullfillCriminalHistoryFileLocationTextBox))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(fulillCriminalChooserButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(finishedFullfillCriminalHistoryFileLocationTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(finishedFullfillFileLocationButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startProcessButton)
                    .addComponent(uploadFullFillButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CheckFoldersAvailability() throws IOException {
        //Check the finished file location
        File file = new File(finishedFullfillCriminalHistoryFileLocationTextBox.getText());
        if(!file.exists())
            file.mkdirs();
        String csvFileName = getWorkFileLocationTextBox.getText() + "\\CSV";
        String xmlFileName = getWorkFileLocationTextBox.getText() + "\\XML";

        file = new File(csvFileName);
        if(!file.exists())
            file.mkdirs();

        file = new File(xmlFileName);
        if(!file.exists())
            file.mkdirs();
    }
    
    private void startProcessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startProcessButtonActionPerformed

        try {
            
            TransactionManager mgr = new TransactionManager();
            if (mgr.IsWebServiceAvailable()) {
                System.out.println("Service Available");

                Date dt = new Date();
                SimpleDateFormat ft = new SimpleDateFormat("dd-MM-yyyy kk-mm-ss");
                String csvFileName = ft.format(dt);
                String xmlFileName = getWorkFileLocationTextBox.getText() + "\\XML\\" + csvFileName + ".xml";
                csvFileName = getWorkFileLocationTextBox.getText() + "\\CSV\\" + csvFileName + ".csv";

                mgr.GetWork(csvFileName, xmlFileName);

                JOptionPane.showMessageDialog(this, "Work list saved to : " + csvFileName);
            } else {
                System.out.println("Service Not Available");
            }
            /*
            MailClient cli = new MailClient();
            cli.SendMail();
            JOptionPane.showMessageDialog(this, "Mailed");
            */
        } catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_startProcessButtonActionPerformed

    private void getWorkFfolderChooserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getWorkFfolderChooserButtonActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fc.setSelectedFile(new File(getWorkFileLocationTextBox.getText()));
        
        if(fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            getWorkFileLocationTextBox.setText(fc.getSelectedFile().getPath());
            try {
                //load the properties
                Properties config = Hi5Utils.GetConfigProperties();
                config.setProperty("getWorkFileLocation", getWorkFileLocationTextBox.getText());
                Hi5Utils.SaveConfigProperties();
            } catch (Exception ex) {
                ex.printStackTrace();
            }

        }
    }//GEN-LAST:event_getWorkFfolderChooserButtonActionPerformed

    private void fulillCriminalChooserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fulillCriminalChooserButtonActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fc.setSelectedFile(new File(fullfillCriminalHistoryFileLocationTextBox.getText()));
        
        if(fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            fullfillCriminalHistoryFileLocationTextBox.setText(fc.getSelectedFile().getPath());
            try {
                //load the properties
                Properties config = Hi5Utils.GetConfigProperties();

                config.setProperty("fullfillCriminalHistoryFileLocation", fullfillCriminalHistoryFileLocationTextBox.getText());
                Hi5Utils.SaveConfigProperties();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_fulillCriminalChooserButtonActionPerformed

    private void uploadFullFillButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadFullFillButtonActionPerformed
        try {
            TransactionManager mgr = new TransactionManager();
          
            new BaseTransactionManager().FullFillCriminalHistory("", "");
//            CheckFoldersAvailability();
//            
//           if (mgr.IsWebServiceAvailable()) {
//                System.out.println("Service Available");
//
//               mgr.FullFillCriminalHistory(fullfillCriminalHistoryFileLocationTextBox.getText(),
//                        finishedFullfillCriminalHistoryFileLocationTextBox.getText());
//
//             
//            
//                JOptionPane.showMessageDialog(this, "Fullfill request operation completed");
//            } else {
//                System.out.println("Service Not Available");
//           }

        } catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_uploadFullFillButtonActionPerformed

    private void finishedFullfillFileLocationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishedFullfillFileLocationButtonActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fc.setSelectedFile(new File(finishedFullfillCriminalHistoryFileLocationTextBox.getText()));

        if(fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            finishedFullfillCriminalHistoryFileLocationTextBox.setText(fc.getSelectedFile().getPath());

            try {
                //load the properties
                Properties config = Hi5Utils.GetConfigProperties();

                config.setProperty("finishedFullfillCriminalHistoryFileLocation",
                        finishedFullfillCriminalHistoryFileLocationTextBox.getText());
                Hi5Utils.SaveConfigProperties();
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_finishedFullfillFileLocationButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {

//       try
//        {
//       //new BaseTransactionManager().GetWork("","d:\test1.xml");
//         new   ADP_XMLParser().testParser() ;
//          //  new XlsParser("");
//        }
//        catch(Exception e)
//        {
//            System.out.println("Exception in Main ==>"+e.getMessage());
//        }
        

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
             new ADPVendorService().setVisible(true);
                
               
            }
      });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField finishedFullfillCriminalHistoryFileLocationTextBox;
    private javax.swing.JButton finishedFullfillFileLocationButton;
    private javax.swing.JButton fulillCriminalChooserButton;
    private javax.swing.JTextField fullfillCriminalHistoryFileLocationTextBox;
    private javax.swing.JButton getWorkFfolderChooserButton;
    private javax.swing.JTextField getWorkFileLocationTextBox;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton startProcessButton;
    private javax.swing.JButton uploadFullFillButton;
    // End of variables declaration//GEN-END:variables

    private Timer backgroundTimer;
    private int delayIntervel = 1000 * 60 * 10;
    private int initialDelay = 1000 * 60 * 60;
}
