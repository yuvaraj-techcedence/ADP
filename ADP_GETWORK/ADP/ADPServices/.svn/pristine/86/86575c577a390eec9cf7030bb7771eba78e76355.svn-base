package com.adp.base;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import https.sassgateway_adp_com.vendorxml.vendorservice.v1.Action;
import https.sassgateway_adp_com.vendorxml.vendorservice.v1.Address;
import https.sassgateway_adp_com.vendorxml.vendorservice.v1.Case;
import https.sassgateway_adp_com.vendorxml.vendorservice.v1.CriminalHistoryDuration;
import https.sassgateway_adp_com.vendorxml.vendorservice.v1.CriminalHistoryResult;
import https.sassgateway_adp_com.vendorxml.vendorservice.v1.GVXException_Exception;
import https.sassgateway_adp_com.vendorxml.vendorservice.v1.MessageVendorAcknowledgement;
import https.sassgateway_adp_com.vendorxml.vendorservice.v1.MessageVendorFulfillWork;
import https.sassgateway_adp_com.vendorxml.vendorservice.v1.Offense;
import https.sassgateway_adp_com.vendorxml.vendorservice.v1.OffenseClassification;
import https.sassgateway_adp_com.vendorxml.vendorservice.v1.PersonIdentifier;

import java.util.ArrayList;
import java.util.List;

/**
 * This class was generated by Apache CXF 2.2.6 Thu Mar 04 10:13:03 MST 2010
 * Generated source version: 2.2.6
 * 
 */

public class VendorServiceSuperFullfill extends SuperVendorServiceClient {

	protected void runTest(String hostLocation) throws Exception {

		MessageVendorFulfillWork _fullfill_fullfillRequest = new MessageVendorFulfillWork();

		if (hostLocation.equals("DIT")) {
			_fullfill_fullfillRequest.setUserId(p.getProperty("dit_userid"));
			System.out.println("Invoking Fullfill (DIT)...");
		} else if (hostLocation.equals("FIT")) {
			_fullfill_fullfillRequest.setUserId(p.getProperty("fit_userid"));
			System.out.println("Invoking Fullfill (FIT)...");
		} else if (hostLocation.equals("IAT")) {
			_fullfill_fullfillRequest.setUserId(p.getProperty("iat_userid"));
			System.out.println("Invoking Fullfill (IAT)...");
		} else if (hostLocation.equals("PROD")) {
			_fullfill_fullfillRequest.setUserId(p.getProperty("prod_userid"));
			System.out.println("Invoking Fullfill (PROD)...");

		}
		_fullfill_fullfillRequest.setAmended(p.getProperty("amended"));

		CriminalHistoryResult result = new CriminalHistoryResult();
		result.setRecord(p.getProperty("record"));
		result.setSassRefString(p.getProperty("sassRefString"));

		Case cases = new Case();

		cases.setArrestDate(p.getProperty("ArrestDate"));
		cases.setFileDate(p.getProperty("FileDate"));
		cases.setCaseNum(p.getProperty("CaseNum"));
		cases.setAgencyName(p.getProperty("AgencyName"));
		cases.setAlternateId(p.getProperty("AlternateId"));

		PersonIdentifier personIdentifier = new PersonIdentifier();

		personIdentifier = new PersonIdentifier();
		personIdentifier.setFirstName(p.getProperty("firstName"));
		personIdentifier.setMiddleName(p.getProperty("middleName"));
		personIdentifier.setLastName(p.getProperty("lastName"));
		personIdentifier.setSuffix(p.getProperty("suffix"));
		personIdentifier.setSsn(p.getProperty("ssn"));
		personIdentifier.setDateOfBirth(p.getProperty("dateOfBirth"));
		personIdentifier.setEyeColor(p.getProperty("eyeColor"));
		personIdentifier.setHairColor(p.getProperty("hairColor"));
		personIdentifier.setWeight(p.getProperty("weight"));
		personIdentifier.setRace(p.getProperty("race"));
		personIdentifier.setScars(p.getProperty("scars"));
		personIdentifier.setGender(p.getProperty("gender"));
		personIdentifier.setHeight(p.getProperty("height"));

		List<PersonIdentifier> personIdentifiers = new ArrayList<PersonIdentifier>();
		personIdentifiers.add(personIdentifier);

		Address address = new Address();

		address.setAddressLine1(p.getProperty("addressLine1"));
		address.setAddressLine2(p.getProperty("addressLine2"));
		address.setCity(p.getProperty("city"));
		address.setState(p.getProperty("state"));
		address.setZipCode(p.getProperty("zipCode"));

		List<Address> addresss = new ArrayList<Address>();
		addresss.add(address);

		Action caseaction = new Action();

		caseaction.setPlea(p.getProperty("plea"));
		caseaction.setSupervision(p.getProperty("supervision"));
		caseaction.setConditions(p.getProperty("condition"));
		caseaction
				.setCriminalDispositionPhrase(p.getProperty("crimDispoPhase"));
		caseaction.setWarrantStartDate(p.getProperty("warrantStartDate"));
		caseaction.setWarrantEndDate(p.getProperty("warrantEndDate"));
		caseaction.setReleaseType(p.getProperty("releaseType"));
		caseaction.setReleaseDate(p.getProperty("releaseDate"));
		caseaction.setWarrantStartReason(p.getProperty("warrantStartReason"));
		caseaction.setWarrantEndReason(p.getProperty("warrantEndReason"));
		caseaction.setAdditionalInfo(p.getProperty("addinfo"));
		caseaction.setNextCourtDate(p.getProperty("nextCourtDate"));
		caseaction.setActionDate(p.getProperty("actionDate"));
		caseaction.setAssessmentAmount(p.getProperty("AssessmmentAmount"));
		caseaction.setAssessmentAmountSuspended(p
				.getProperty("AssessmmentAmountSuspension"));
		caseaction.setAssessmentFee(p.getProperty("AssessmentFees"));
		caseaction.setAssessmentFine(p.getProperty("AssessmentFine"));
		caseaction.setAssessmentCosts(p.getProperty("AssessmentCost"));
		caseaction.setAssessmentRestitution(p
				.getProperty("AssessmentRestitution"));
		caseaction.setConfinementCredited(p.getProperty("ConfinmentCredited"));
		caseaction.setConfinementStayed(p.getProperty("ConfinmentStayed"));

		CriminalHistoryDuration cd = new CriminalHistoryDuration();
		CriminalHistoryDuration csd = new CriminalHistoryDuration();
		CriminalHistoryDuration ccd = new CriminalHistoryDuration();
		CriminalHistoryDuration cstd = new CriminalHistoryDuration();
		CriminalHistoryDuration sd = new CriminalHistoryDuration();

		cd.setDays(p.getProperty("day_1_days"));
		cd.setHours(p.getProperty("day_1_hour"));
		cd.setMonths(p.getProperty("day_1_month"));
		cd.setYears(p.getProperty("day_1_year"));

		csd.setDays(p.getProperty("day_2_days"));
		csd.setHours(p.getProperty("day_2_hour"));
		csd.setMonths(p.getProperty("day_2_month"));
		csd.setYears(p.getProperty("day_2_year"));

		ccd.setDays(p.getProperty("day_3_days"));
		ccd.setHours(p.getProperty("day_3_hour"));
		ccd.setMonths(p.getProperty("day_3_month"));
		ccd.setYears(p.getProperty("day_3_year"));

		cstd.setDays(p.getProperty("day_4_days"));
		cstd.setHours(p.getProperty("day_4_hour"));
		cstd.setMonths(p.getProperty("day_4_month"));
		cstd.setYears(p.getProperty("day_4_year"));

		sd.setDays(p.getProperty("day_5_days"));
		sd.setHours(p.getProperty("day_5_hour"));
		sd.setMonths(p.getProperty("day_5_month"));
		sd.setYears(p.getProperty("day_5_year"));

		caseaction.setConfinementDuration(cd);
		caseaction.setConfinementCreditedDuration(ccd);
		caseaction.setConfinementStayedDuration(cstd);
		caseaction.setConfinementSuspendedDuration(csd);
		caseaction.setSupervisionDuration(sd);

		List<Action> casesactions = new ArrayList<Action>();
		casesactions.add(caseaction);

		Offense offense = new Offense();

		offense.setOffenseDate(p.getProperty("OffenseDate"));
		offense.setOffenseCount(Integer.parseInt(p.getProperty("OffeseCount")));

		OffenseClassification oc = new OffenseClassification();

		oc.setClassLevel(p.getProperty("OffenceClassLevel_1"));
		oc.setOffense(p.getProperty("OffenceOffense_1"));
		oc.setType(p.getProperty("OffenceType_1"));

		OffenseClassification fc = new OffenseClassification();

		fc.setClassLevel(p.getProperty("OffenceClassLevel_2"));
		fc.setOffense(p.getProperty("OffenceOffense_2"));
		fc.setType(p.getProperty("OffenceType_2"));

		OffenseClassification fc1 = new OffenseClassification();

		fc1.setClassLevel(p.getProperty("OffenceClassLevel_3"));
		fc1.setOffense(p.getProperty("OffenceOffense_3"));
		fc1.setType(p.getProperty("OffenceType_3"));

		offense.setOriginalOffenseClassification(oc);
		offense.setFilingOffenseClassification(fc);
		offense.setFinalOffenseClassification(fc1);

		Action offaction = new Action();

		offaction.setPlea(p.getProperty("OffencePlea"));
		offaction.setSupervision(p.getProperty("OffenceSupervision"));
		offaction.setConditions(p.getProperty("OffenceCondition"));
		offaction.setCriminalDispositionPhrase(p
				.getProperty("OffenceCrimDispoPhase"));
		offaction.setWarrantStartDate(p.getProperty("OffenceWarrantStartDate"));
		offaction.setWarrantEndDate(p.getProperty("OffenceWarrantendDate"));
		offaction.setReleaseType(p.getProperty("OffenceReleaseType"));
		offaction.setReleaseDate(p.getProperty("OffenceReleaseDate"));
		offaction.setWarrantStartReason(p
				.getProperty("OffenceWarrantStartReason"));
		offaction.setWarrantEndReason(p.getProperty("OffenceWarrantReason"));
		offaction.setAdditionalInfo(p.getProperty("OffenceAddinfo"));
		offaction.setNextCourtDate(p.getProperty("OffenceNextCourtDate"));
		offaction.setActionDate(p.getProperty("OffenceActionDate"));
		offaction
				.setAssessmentAmount(p.getProperty("OffenceAssessmmentAmount"));
		offaction.setAssessmentAmountSuspended(p
				.getProperty("OffenceAssessmmentAmountSuspension"));
		offaction.setAssessmentFee(p.getProperty("OffenceAssessmentFees"));
		offaction.setAssessmentFine(p.getProperty("OffenceAssessmentFine"));
		offaction.setAssessmentCosts(p.getProperty("OffenceAssessmentCost"));
		offaction.setAssessmentRestitution(p
				.getProperty("OffenceAssessmentRestitution"));
		offaction.setConfinementCredited(p
				.getProperty("OffenceConfinmentCredited"));
		offaction
				.setConfinementStayed(p.getProperty("OffenceConfinmentStayed"));

		CriminalHistoryDuration Ocd = new CriminalHistoryDuration();
		CriminalHistoryDuration Ocsd = new CriminalHistoryDuration();
		CriminalHistoryDuration Occd = new CriminalHistoryDuration();
		CriminalHistoryDuration Ocstd = new CriminalHistoryDuration();
		CriminalHistoryDuration Osd = new CriminalHistoryDuration();

		Ocd.setDays(p.getProperty("OffenceDay_1_days"));
		Ocd.setHours(p.getProperty("OffenceDay_1_hour"));
		Ocd.setMonths(p.getProperty("OffenceDay_1_month"));
		Ocd.setYears(p.getProperty("OffenceDay_1_year"));

		Ocsd.setDays(p.getProperty("OffenceDay_2_days"));
		Ocsd.setHours(p.getProperty("OffenceDay_2_hour"));
		Ocsd.setMonths(p.getProperty("OffenceDay_2_month"));
		Ocsd.setYears(p.getProperty("OffenceDay_2_year"));

		Occd.setDays(p.getProperty("OffenceDay_3_days"));
		Occd.setHours(p.getProperty("OffenceDay_3_hour"));
		Occd.setMonths(p.getProperty("OffenceDay_3_month"));
		Occd.setYears(p.getProperty("OffenceDay_3_year"));

		Ocstd.setDays(p.getProperty("OffenceDay_4_days"));
		Ocstd.setHours(p.getProperty("OffenceDay_4_hour"));
		Ocstd.setMonths(p.getProperty("OffenceDay_4_month"));
		Ocstd.setYears(p.getProperty("OffenceDay_4_year"));

		Osd.setDays(p.getProperty("OffenceDay_5_days"));
		Osd.setHours(p.getProperty("OffenceDay_5_hour"));
		Osd.setMonths(p.getProperty("OffenceDay_5_month"));
		Osd.setYears(p.getProperty("OffenceDay_5_year"));

		caseaction.setConfinementDuration(Ocd);
		caseaction.setConfinementCreditedDuration(Occd);
		caseaction.setConfinementStayedDuration(Ocstd);
		caseaction.setConfinementSuspendedDuration(Ocsd);
		caseaction.setSupervisionDuration(Osd);

		List<Action> offactionaction = new ArrayList<Action>();
		offactionaction.add(offaction);
		offense.setActions(offactionaction);

		List<Offense> offenses = new ArrayList<Offense>();
		offenses.add(offense);

		List<Case> casess = new ArrayList<Case>();

		cases.setPersonIdentifiers(personIdentifiers);
		cases.setActions(casesactions);
		cases.setOffenses(offenses);
		cases.setPersonAddress(addresss);
		casess.add(cases);
		result.setCases(casess);

		List<CriminalHistoryResult> results = new ArrayList<CriminalHistoryResult>();
		results.add(result);

		_fullfill_fullfillRequest.setCriminalHistoryResults(results);

		try {

			MessageVendorAcknowledgement _fullfill__return = null;
			if (hostLocation.equals("DIT")) {
				_fullfill__return = portDit
						.fulfillCriminalHistory(_fullfill_fullfillRequest);
			} else if (hostLocation.equals("FIT")) {
				_fullfill__return = portFit
						.fulfillCriminalHistory(_fullfill_fullfillRequest);
			} else if (hostLocation.equals("IAT")) {
				_fullfill__return = portiAT
						.fulfillCriminalHistory(_fullfill_fullfillRequest);
			} else if (hostLocation.equals("PROD")) {
				_fullfill__return = portProd
						.fulfillCriminalHistory(_fullfill_fullfillRequest);
			}

			System.out.println("fullfill.result=" + _fullfill__return);
			System.out.println("Status=: "
					+ _fullfill__return.getOverallStatus().value());
			if (_fullfill__return.getInvalidCriminalHistoryResults().size() > 0) {

				for (int i = 0; i < _fullfill__return
						.getInvalidCriminalHistoryResults().size(); i++) {
					for (int k = 0; k < _fullfill__return
							.getInvalidCriminalHistoryResults().get(i)
							.getValidationMessages().size(); k++) {
						System.out.println("Reason type: "
								+ _fullfill__return
										.getInvalidCriminalHistoryResults()
										.get(i).getValidationMessages().get(k)
										.getReasonType());
						System.out.println("Reason Descritpion: "
								+ _fullfill__return
										.getInvalidCriminalHistoryResults()
										.get(i).getValidationMessages().get(k)
										.getReasonDescription());
					}
				}
			} else {
				System.out
						.println("There is no invalid criminal history result");
			}

			if (_fullfill__return.getValidCriminalHistoryResults().size() > 0) {
				for (int i = 0; i < _fullfill__return
						.getValidCriminalHistoryResults().size(); i++) {
					for (int k = 0; k < _fullfill__return
							.getValidCriminalHistoryResults().get(i)
							.getValidationMessages().size(); k++) {
						System.out.println("Reason type: "
								+ _fullfill__return
										.getValidCriminalHistoryResults()
										.get(i).getValidationMessages().get(k)
										.getReasonType());
						System.out.println("Reason Descritpion: "
								+ _fullfill__return
										.getValidCriminalHistoryResults()
										.get(i).getValidationMessages().get(k)
										.getReasonDescription());
					}
				}
			} else

			{
				System.out.println("There is no valid criminal history result");
			}

		} catch (GVXException_Exception e) {
			System.out
					.println("Expected exception: GVXException has occurred.");
			System.out.println(e.toString());
			e.printStackTrace();
		}

		System.exit(0);
	}
}
